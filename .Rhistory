x <- "Hola"
y <- "UNTRM"
paste(x, y)
Nathalie Zirena Arana
x <- "Hola"
y <- "UNTRM"
paste(x, y)
paste(x, y, sep = "-")
paste(x,y)
paste(x,y,sep="-")
area_cir <- funtion(radio){pi*radio*radio}
area_cir <- function(radio){pi*radio*radio}
area_cir(radio = 10)
#funcion para IMC
IMC <- function(BW,H){BW/H*H}
IMC(BW = 72, H=168)
#funcion para IMC
IMC <- function(BW,H){BW/H*H}
IMC(BW = 72, H=168)
IMC(BW = 72, H=1.68)
#funcion para IMC
IMC <- function(BW,H){BW/H*H}
IMC(BW = 72, H=1.68)
#funcion para IMC
IMC <- function(BW,H){BW/(H*H)}
IMC(BW = 72, H=1.68)
IMC(BW = 72, H=1.70)
#ChatGPT Crear funcion para índice corporal
calcular_imc <- function(peso, altura){imc <- peso / (altura^2)
categoria <- ifelse(imc < 18.5, "Bajo peso",
ifelse(imc >= 18.5 & imc < 24.9, "Peso normal",
ifelse(imc >= 25 & imc < 29.9, "Sobrepeso",
obesidad))}
categoria <- ifelse(imc < 18.5, "Bajo peso",
ifelse(imc >= 18.5 & imc < 24.9, "Peso normal",
ifelse(imc >= 25 & imc < 29.9, "Sobrepeso",
obesidad)))}
categoria <- ifelse(imc < 18.5, "Bajo peso",
ifelse(imc >= 18.5 & imc < 24.9, "Peso normal",
ifelse(imc >= 25 & imc < 29.9, "Sobrepeso",
obesidad)))
#ChatGPT Crear funcion para índice corporal
calcular_imc <- function(peso, altura){imc <- peso / (altura^2)
categoria <- ifelse(imc < 18.5, "Bajo peso",
ifelse(imc >= 18.5 & imc < 24.9, "Peso normal",
ifelse(imc >= 25 & imc < 29.9, "Sobrepeso",
obesidad)))
}
#ChatGPT Crear funcion para índice corporal
calcular_imc <- function(peso, altura){imc <- peso / (altura^2)
categoria <- ifelse(imc < 18.5, "Bajo peso",
ifelse(imc >= 18.5 & imc < 24.9, "Peso normal",
ifelse(imc >= 25 & imc < 29.9, "Sobrepeso",
obesidad)))
resultado <- list(IMC = round(imc,2), Categoria = categoria)
return(resultado)
}
peso <- 70
altura <- 1.75
resultado <- calcular_imc(peso, altura)
print(resultado)
library(readxl)
fb <- read_excel("D:/DOCTORADO/1ER MODULO/DISEÑOS ESTAD�\215STICOS/2DA UNIDAD/Prof_Flavio/Clases_R/LA MOLINA 2014 POTATO WUE (FB).xlsx",
sheet = "fb")
View(LA_MOLINA_2014_POTATO_WUE_FB_)
View(fb)
fb <- read_excel("D:/DOCTORADO/1ER MODULO/DISEÑOS ESTAD�\215STICOS/2DA UNIDAD/Prof_Flavio/Clases_R/LA MOLINA 2014 POTATO WUE (FB).xlsx",
sheet = "fb")
library(readxl)
library(readxl)
git add .
# Definir los tratamientos
tratamientos <- c("T1", "T2", "T3", "T4")
# Definir el número de repeticiones
repeticiones <- 5
# Crear el diseño DCA
diseño_dca <- design.crd(tratamientos, replications = repeticiones, seed = 1234)
# Definir los tratamientos
tratamientos <- c("T1", "T2", "T3", "T4")
# Definir el número de repeticiones
repeticiones <- 5
# Crear el diseño DCA
diseño_dca <- design.crd(tratamientos, replications = repeticiones, seed = 123)
# Definir los tratamientos y el número de repeticiones
tratamientos <- c("T1", "T2", "T3", "T4")
# Definir 4 tratamientos
repeticiones <- 5  # 5 repeticiones para cada tratamiento
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(tratamientos, replications = repeticiones, seed = 123)
# Instalar y cargar el paquete agricolae
install.packages("agricolae")
library(agricolae)
# Definir los tratamientos y el número de repeticiones
tratamientos <- c("T1", "T2", "T3", "T4")
# Definir 4 tratamientos
repeticiones <- 5  # 5 repeticiones para cada tratamiento
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(tratamientos, replications = repeticiones, seed = 123)
# Instalar y cargar el paquete agricolae
install.packages("agricolae")
library(agricolae)
# Definir los tratamientos y el número de repeticiones
tratamientos <- c("T1", "T2", "T3", "T4")
# Definir 4 tratamientos
repeticiones <- 5  # 5 repeticiones para cada tratamiento
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(tratamientos, replications = repeticiones, seed = 123)
# Instalar y cargar el paquete agricolae
install.packages("agricolae")
library(agricolae)
# Definir los tratamientos y el número de repeticiones
tratamientos <- c("T1", "T2", "T3", "T4")
# Definir 4 tratamientos
repeticiones <- 5  # 5 repeticiones para cada tratamiento
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(tratamientos, replications = repeticiones, seed = 123)
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(tratamientos, replications =repeticiones, seed = 123)
library(agricolae)
# Definir los tratamientos y el número de repeticiones
tratamientos <- c("T1", "T2", "T3", "T4")
# Definir 4 tratamientos
repeticiones <- 5  # 5 repeticiones para cada tratamiento
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(tratamientos, replications =repeticiones, seed = 123)
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(tratamientos, repeticiones, seed = 123)
# Mostrar la disposición del diseño experimental
print(diseño_dca$book)
View(resultado)
View(diseño_dca)
# Instalar y cargar el paquete agricolae
install.packages("agricolae")
library(agricolae)
# Definir los tratamientos y el número de repeticiones
fertilizacion <- c("T1", "T2", "T3", "T4")
# Definir 4 tratamientos
repeticiones <- 5
# 5 repeticiones para cada tratamiento
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(trt=fertilizacion, r=repeticiones, seed = 123)
# Mostrar la disposición del diseño experimental
print(diseño_dca$book)
# Simular datos de respuesta para los tratamientos (puedes reemplazar con tus propios datos)
datos <- c(15.2, 14.3, 13.8, 15.5, 14.7, 16.8, 15.5, 15.9, 16.2, 15.0,
12.0, 11.5, 12.2, 12.7, 13.0, 17.0, 16.5, 16.8, 17.5, 17.2)
# Agregar los datos simulados al diseño experimental
diseño_dca$book$y <- datos
# Mostrar el diseño experimental con los datos de respuesta
print(diseño_dca$book)
# Realizar el análisis de varianza (ANOVA)
modelo <- aov(y ~ trat, data = diseño_dca$book)
# Definir los tratamientos y el número de repeticiones
fertilizacion <- c("T1", "T2", "T3", "T4")
# Definir 4 tratamientos
repeticiones <- 5
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(trt=fertilizacion, r=repeticiones, seed = 123)
# Mostrar la disposición del diseño experimental
print(diseño_dca$book)
# Instalar y cargar el paquete agricolae
install.packages("agricolae")
library(agricolae)
# Definir los tratamientos y el número de repeticiones
fertilizacion <- c("T1", "T2", "T3", "T4")
# Definir 4 tratamientos
repeticiones <- 5
# 5 repeticiones para cada tratamiento
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(trt=fertilizacion, r=repeticiones, seed = 123)
# Mostrar la disposición del diseño experimental
print(diseño_dca$book)
install.packages("agricolae")
# Definir los tratamientos y el número de repeticiones
fertilizacion <- c("T1", "T2", "T3", "T4")
# Definir 4 tratamientos
repeticiones <- 5
# Crear el diseño completamente al azar (DCA)
diseño_dca <- design.crd(trt=fertilizacion, r=repeticiones, seed = 123)
# Mostrar la disposición del diseño experimental
print(diseño_dca$book)
trt<-c(4,2)
outdesign <-design.ab(trt, r=5, serie=5)
book<-outdesign$book
head(book10)
trt<-c(4,2)
outdesign <-design.ab(trt, r=5, serie=5)
book<-outdesign$book
head(book25)
trt<-c(4,2)
outdesign <-design.ab(trt, r=5, serie=5)
book<-outdesign$book
head(book8)
dosis <- c(0,50,100,150)
variedad <- c("canchan", "peruanita")
library(agricolae)
trt<-c(4,2)
outdesign <-design.ab(trt, r=5)
book<-outdesign$book
head(book)
library(agricolae)
trt<-c(4,2)
outdesign <-design.ab(trt, r=5)
book<-outdesign$book
head(book40)
head(book)
str(outdesign)
#factoral 4x2 con 5 bloques
trt<-c(4,2)
outdesign <-design.ab(trt, r=5)
book<-outdesign$book
book
dosis <- c(0,50,100,150)
variedad <- c("canchan", "peruanita")
library(agricolae)
#factoral 4x2 con 5 bloques
trt<-c(4,2)
outdesign <-design.ab(trt, r=5)
str(outdesign)
book<-outdesign$book
book
# Instalar y cargar el paquete agricolae
library(agricolae)
fertilizacion <- c("T1", "T2", "T3", "T4")
repeticiones <- 5
diseño_dca <- design.crd(trt=fertilizacion, r=repeticiones, seed = 123)
# Mostrar la disposición del diseño experimental
print(diseño_dca$book)
